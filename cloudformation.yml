Description: Rails Application

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: pb-4

  VpcOctet:
    Description: Please enter the second octect of the IP range for this VPC's e.g 10.<?>.0.0/16
    Type: String
    Default: 4

  AdminIP:
    Description: IP address that will be granted full access to any internet facing resources
    Type: String
    Default: 217.169.4.206

  KeyPair:
    Description: Keypair for SSH into EC2 Instance
    Type: String
    Default: gsg-keypair

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Join [.,[10,!Ref VpcOctet,0,0/16]]
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Join [.,[10,!Ref VpcOctet,1,0/24]]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Join [.,[10,!Ref VpcOctet,101,0/24]]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet

  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes (AZ1)

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  ServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "HTTP Over 8080"
      SecurityGroupIngress:
        - FromPort: 0
          ToPort: 65535
          IpProtocol: -1
          CidrIp: !Join [.,[10,!Ref VpcOctet,0,0/16]]
      VpcId: !Ref VPC

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: 'rails'

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: '/ecs/rails'
      RetentionInDays: 1

  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Image: docker.io/sgbett/rails-app:latest
          Name: rails-container
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              'awslogs-region': 'eu-west-1'
              'awslogs-group': !Ref LogGroup
              'awslogs-stream-prefix': 'rails'
      Cpu: 256
      ExecutionRoleArn: ecsTaskExecutionRole
      Family: rails
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: ecsTaskExecutionRole

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      DesiredCount: 1
      LaunchType: "FARGATE"
      NetworkConfiguration:
          AwsvpcConfiguration:
            SecurityGroups:
              - !Ref ServiceSecurityGroup
            Subnets:
              - !Ref PrivateSubnet
      SchedulingStrategy: REPLICA
      ServiceName: rails
      TaskDefinition: !Ref Task

  AdminIPSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Admin IP Address"
      SecurityGroupIngress:
        - FromPort: 0
          ToPort: 65535
          IpProtocol: -1
          CidrIp: !Join [/,[!Ref AdminIP,32]]
      VpcId: !Ref VPC

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      ImageId: ami-06358f49b5839867c
      InstanceInitiatedShutdownBehavior: terminate
      InstanceType: t2.micro
      KeyName: !Ref KeyPair
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref AdminIPSecurityGroup
